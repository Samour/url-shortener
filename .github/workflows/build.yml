name: Build & Publish

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: url-shortener
  S3_BUCKET: s3.url-shortener.samour.net

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Version
        id: version
        run: |
          VERSION=$(date -u +%FT%H_%M_%S)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"
      - name: Tag commit
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          git tag $VERSION
          git push origin $VERSION

  build_be:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - name: Build application jar
        run: |
          ./gradlew bootJar
          cp build/libs/url-shortener-*.jar ./app.jar
        working-directory: be
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: app.jar
          path: be/app.jar

  publish_be:
    runs-on: ubuntu-latest
    needs:
      - version
      - build_be
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: app.jar
          path: be
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag & push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ needs.version.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        working-directory: be

  build_fe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
          cache-dependency-path: fe
      - name: Build FE
        run: npm run build
        working-directory: fe
      - name: Upload FE assets
        uses: actions/upload-artifact@v2
        with:
          name: fe-build
          path: fe/build

  publish_fe:
    runs-on: ubuntu-latest
    needs:
      - version
      - build_fe
    steps:
      - name: Download FE assets
        uses: actions/download-artifact@v2
        with:
          name: fe-build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Upload to S3
        env:
          VERSION: ${{ needs.version.outputs.version }}
        run: aws s3 cp build/* s3://$S3_BUCKET/$VERSION/

  cf_plan:
    runs-on: ubuntu-latest
    needs:
      - version
      - publish_be
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Cloudformation Plan
        env:
          VERSION: ${{ needs.version.outputs.version }}
        run: ./create-service.sh
        working-directory: build
