name: Build & Publish

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: url-shortener
  SERVICE_NAME: url-shortener
  PROJECT_PHASE: POC
  DNS_ZONE_NAME: samour.net.
  DNS_NAME: api.urls.samour.net.

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Version
        id: version
        run: |
          VERSION=$(date -u +%FT%H_%M_%S)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - name: Build application jar
        run: |
          cd be
          ./gradlew bootJar
          cp build/libs/url-shortener-*.jar ./app.jar
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: app.jar
          path: be/app.jar

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: app.jar
          path: be
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag & push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          cd be
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION

  cf_plan:
    runs-on: ubuntu-latest
    needs:
      - build
      - publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Cloudformation Plan
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.SERVICE_NAME }}-app
          template: cloudformation/Service.yaml
          no-execute-changeset: "1"
          no-fail-on-empty-changeset: "1"
          no-delete-failed-changeset: "1"
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            ServiceName=${{ env.SERVICE_NAME }}
            ProjectPhase=${{ env.PROJECT_PHASE }}
            Version=${{ needs.build.outputs.version }}
            DnsZoneName=${{ env.DNS_ZONE_NAME }}
            DnsName=${{ env.DNS_NAME }}
